source('~/Development/Coursera/run_analysis.R')
View(x_final)
getwd()
setwd("Getting and Cleaning Data")
getwd()
setwd("Reviews")
getwd()
source('~/Development/Coursera/Getting and Cleaning Data/Reviews/run_anlaysis.R')
rm(x_final)
rm(x_total)
rm(x_test_labels)
rm(x_training_labels)
rm(x_traini)
rm(x_train)
rm(x_test)
rm(x_nodup)
rm(x_meanstd)
rm(x_dup)
source('~/Development/Coursera/Getting and Cleaning Data/Reviews/run_anlaysis.R')
source('~/Development/Coursera/Getting and Cleaning Data/Reviews/run_analysis.R')
getwd()
setwd('/UCI HAR Dataset')
setwd("/UCI HAR Dataset")
dir()
setwd("UCI HAR Dataset")
source('~/Development/Coursera/Getting and Cleaning Data/Reviews/run_analysis.R')
source('~/Development/Coursera/Getting and Cleaning Data/Reviews/run_analysis.R')
source('~/Development/Coursera/Getting and Cleaning Data/Reviews/run_analysis.R')
setwd("C:/Users/Damià/Desktop/Data science specialization/3.Getting and Cleaning Data/Project/Data")
setwd("Users/Damià/Desktop/Data science specialization/3.Getting and Cleaning Data/Project/Data")
setwd("Users/Dami/Desktop/Data science specialization/3.Getting and Cleaning Data/Project/Data")
source('~/Development/Coursera/Getting and Cleaning Data/Reviews/run_analysis.R')
rm(list = ls())
source('~/Development/Coursera/Getting and Cleaning Data/Reviews/run_analysis.R')
source('~/Development/Coursera/Getting and Cleaning Data/Reviews/run_analysis.R')
getwd()
getwd("./")
getwd("/")
setwd("./")
getwd()
getwd("/")
setwd("/")
getwd()
setwd("/Users/johntrefethen/Development/Coursera/)
setwd("/Users/johntrefethen/Development/Coursera/")
getwd(0)
getwd()
date()
day()
day <- date()
format(day, "%a %b %d")
format(d2, "%a %b %d")
d2 = Sys.date()
d2 = Sys.Date()
format(d2, "%a %b %d")
format(d2, "%a %B %d")
format(d2, "%a %B %d %y")
format(d2, "%a %B %d %Y")
format(d2, "%A %B %D %Y")
format(d2, "%A %B %D %Y %T")
format(d2, "%A %B %D %Y %t")
rm(list = ls())
?download.file
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, "housing.csv", method="curl")
housing <- read.csv("housing.csv")
View(housing)
?strsplit
names(housing)
splitnames = strplit(names(housing),"wgtp")
splitnames = strsplit(names(housing),"wgtp")
splitnames[123]
fileurl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileurl2, "gdp.csv", method="curl")
gdp <- read.csv("gdp.csv")
View(gdp)
gdp
gdp[X.3]
gdp$X.3
class(gdp$X.3)
gdp2 <- sub(",", "", gdp$X.3)
gdp2$X.3
gdp2
gdp2 <- sub(",", "", "15,543,545")
gdp2
gdp2 <- gsub(",", "", "15,543,545")
gdp2
gdp2 <- gsub(",", "", gdp$X.3)
gdp2
?sum
sum(gdp2[5:194])
gdpnum <- as.numeric(gdp2[5:194])
gdpnum
?ave
mean
mean(gdpnum)
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileurl, "gdp.csv", method="curl")
gdp <- read.csv("gdp.csv")
grep("^United",countryNames), 4
grep("^United",gdp$X.2), 4
grep("^United",gdp$X.2), 4
View(gdp)
countryNames <- gdp$X.2
countryNames
countryNames <- countryNames[5:194]
countryNames
grep("^United",countryNames), 4
grep("United$",countryNames), 3
?grep
grep("United$",countryNames)
grep("United$",countryNames)
countryNames2 <- countryNames[1:98]
countryNames2
countryNames2 <- countryNames[100:185]
countryNames2 <- countryNames[187:190]
countryNames2
countryNames2 <- countryNames[1:98]
countryNames2 <- rbind(countryNames2, countryNames[100:185])
countryNames
countryNames2 <- rbind(countryNames2, countryNames[100:185])
countryNames
countryNames[186] <- "bad"
countryNames
countryNames[99] <- "bad"
View(countryNames)
grep("^United",countryNames), 4
grep("^United",countryNames)
grep("^United",countryNames)
gdp
View(gdp)
fileurl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileurl2, "education.csv", method="curl")
educ <- read.csv("educ.csv")
educ <- read.csv("education.csv")
View(educ)
?grep
grep("fiscal", educ$Special.Notes)
grep("June", educ$Special.Notes)
grep("June 30", educ$Special.Notes)
lines <- grep("June 30", educ$Special.Notes)
lines
checks <- educ$Special.Notes[c(checks)]
checks <- educ$Special.Notes[c(lines)]
checks
checks[1]
checks[2]
View(checks)
grep("June 30", educ$Special.Notes)
grep("June", educ$Special.Notes)
lines2 <- grep("June", educ$Special.Notes)
checks2 <- educ$Special.Notes[c(lines2)]
View(checks2)
View(educ$Special.Notes)
lines2 <- grep("Jun", educ$Special.Notes)
grep("Jun", educ$Special.Notes)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
amzn
sampleTimes = index(amzn)
View(sampleTimes)
grep("2012", sampleTimes)
sum(grep("2012", sampleTimes))
count(grep("2012", sampleTimes))
rownum(grep("2012", sampleTimes))
?rows
?numrow
samples <- grep("2012", SampleTimes)
samples <- grep("2012", sampleTimes)
samples
rownum(samples)
row(samples)
str(samples)
class(sampleTimes$x)
class(sampleTimes[x]
amzn
View(amzn)
day("2013-08-14")
sampleTimes
sampleTimes[2]
as.date(sampleTimes[2], "%Y%m%d")
as.Date(sampleTimes[2], "%Y%m%d")
as.Date(sampleTimes[2], "%A%Y%m%d")
day <- as.Date(sampleTimes[2], "%A%Y%m%d")
class(day)
dates <- as.Date(sampleTimes, "%Y%m%d")
dates
weekdays(sampleTimes)
weekdays(sampleTimes == "Monday")
weekdays(sampleTimes) == "Monday"
dates
dates2 <- as.Date(dates, "%A%Y")
dates2
dates2 < 2013-01-01
View(dates)
dates2 <- dates >= as.Date("2012-01-01")
dates2
View(dates[1260:1261])
dates3 <- dates <= as.Date("2012-12-31")
dates3
View(dates[1504:1511])
View(dates[1504:1510])
View(dates[1261:1510])
dates3 <- dates[1261:1510]
dates3
wd <- weekdays(dates3)
wd
wd == Monday
wd == "Monday"
?sort
sort(wd)
View(sort(wd))
wdsum <- wd == "Monday"
wdsum
sum(wdsum)
dates
datesum <- dates >= as.Date("2012-01-01")
datesum
sum(datesum)
datesum <- dates >= as.Date("2012-01-01") & dates <= as.Date("2012-12-31")
sum(datesum)
library("swirl")
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, strngsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran r_arch:country)
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version >= "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gni")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA, 10))
!is.na(c(3,5,NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package(cran, package)
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
reset()
submit()
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submi()
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
quit()
?points
?postscript
?pdf
?dev.copy2pdf
rm(list=ls())
getwd()
source('~/.active-rstudio-document')
rm(list=ls())
source('~/.active-rstudio-document')
rm(list=ls())
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(list=ls())
source('~/.active-rstudio-document')
rm(list=ls())
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Development/ExploratoryDA/plot4.R')
source('~/Development/ExploratoryDA/plot4.R')
rm(list=ls())
source('~/Development/ExploratoryDA/plot4.R')
rm(list=ls())
source('~/Development/ExData_Plotting1/plot4.R')
rm(list=ls())
source('~/Development/ExploratoryDA/plot4.R')
rm(list=ls())
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Development/ExploratoryDA/plot1.R')
pf_hist <- hist(pf$Global_active_power, nclass = 12, plot = FALSE)
plot(pf_hist, col = "Red", main = "Global Active Power",
ylab = "Global Active Power (kilowatts)",
xlab = "Frequency")
rm(list=ls())
source('~/Development/ExData_Plotting1/plot1.R')
source('~/Development/ExData_Plotting1/plot1.R')
rm(list=ls())
source('~/.active-rstudio-document')
source('~/Development/ExData_Plotting1/plot3.R')
source('~/Development/ExData_Plotting1/plot1.R')
source('~/Development/ExData_Plotting1/plot2.R')
source('~/Development/ExData_Plotting1/plot3.R')
source('~/Development/ExData_Plotting1/plot4.R')
getwd()
cd()
setwd("/Users/johntrefethen/Development/ExploratoryDA")
source('~/.active-rstudio-document')
head(NEI)
head(SCC)
rm(power)
View(SCC)
str(NEI)
str(SCC)
head(NEI)
NEI$fips == 00501
View(NEI$fips == 09001)
install.pacakges("dplyr")
install.packages("dplyr")
library(dplry)
library(dplyr)
?filter
NEI_filt <- filter(NEI, fips = 09001)
NEI_filt <- filter(NEI, fips == 09001)
NEI_filt <- filter(NEI, fips == "09001")
View(NEI_filt)
NEI_filt <- filter(NEI, fips == "24510")
View(NEI_filt)
class(NEI_filt)
class(NEI_filt$fips)
class(NEI_filt$SCC)
class(NEI_filt$Emissions)
class(NEI_filt$Year)
plot(NEI_filt$Emissions, NEI_filt(year))
plot(NEI_filt$Emissions, NEI_filt$year)
plot(NEI_filt$year, NEI_filt$Emissions)
str(NEI)
class(year)
class(NEI$year)
?aggregate
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(plyr); library(dplyr)
?apply
?tapply
sp <- split(NEI, NEI$year)
str(sp)
View(sp$1999[fips])
View(sp$1999)
View(sp[1999$fips])
View(sp[1999])
sp$1999
sp.1999
sp
asdf
rm(sp)
emissions_by_year <- with(NEI, split(emissions, year))
emissions_by_year <- with(NEI, split(Emissions, year))
str(emissions_by_year)
sum_by_year <- lapply(emissions_by_year, sum)
View(sum_by_year)
years <- c("1999", "2002", "2005", "2008")
plot(years, sum_by_year)
years <- c("1998", "2002", "2005", "2008")
plot(years, sum_by_year)
years <- c("1999", "2002", "2005", "2008")
plot(years, sum_by_year)
plot(years, sum_by_year, ylab = "Total PM2.5 Emission")
plot(years, sum_by_year, ylab = "Total PM2.5 Emission", xlab = "Year")
plot(years, sum_by_year, ylab = "Total PM2.5 Emission", xlab = "Year", type = "l")
rm(list=ls())
?axis
axis(1, at = year)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
axis(1, at = year)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
sum_by_year <- lapply(emissions_by_year, sum)
View(sum_by_year)
years <- c("1999", "2002", "2005", "2008")
plot(years, sum_by_year)
source('~/.active-rstudio-document')
plot(years, sum_by_year, type = "h")
plot(years, sum_by_year, type = "l")
plot(years, sum_by_year, ylab = "Total PM2.5 Emission", xlab = "Year", type = "l")
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data = airquality())
xyplot(Ozone ~ Wind, data = airquality
)
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
set.seed(100)
x <- rnorm(100)
f <- rep(0:1, each = 50)
f
y <- x + f - x * f + rnorm(100, sd = 0.5)
y
f <- factor(f, labels = c("Group 1", "Group 2"))
f
xyplot(y ~ x | f, layout = c(2, 1))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
xyplot(y ~ x | f, layout = c(2, 1))
panel.abline(h = median(y), lty = 2)
xypot(x ~ y | f, panel = function(x, y, ...){ panel.xyplot(x, y, ...) }
panel.abline(h = median(y), lty = 2) })
xypot(x ~ y | f, panel = function(x, y, ...){ panel.xyplot(x, y, ...)
panel.abline(h = median(y), lty = 2) } )
xyplot(x ~ y | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.abline(h = median(y), lty = 2)
})
xyplot(x ~ y | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.lmline(x, y, col = 2)
})
?panel.lmline
library(ggplot)
install.packages("ggplot2")
library(ggplot)
library(ggplot2)
str(mpg)
mpg$manufacturer
qpplot(dipl, hwy, data = mpg)
qplot(dipl, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
?qplot
qplot(sum_by_year, years)
sum_by_year
colnames(sum_by_year)
class(sum_by_year)
names(sum_by_year)
plot(names(sum_by_year), sum_by_year)
plot(names(sum_by_year), sum_by_year, ylab = "Total PM2.5 Emission", xlab = "Year", type = "l")
plot(names(sum_by_year), sum_by_year, ylab = "Total PM2.5 Emission", xlab = "Year", type = "l", pch = 3)
plot(names(sum_by_year), sum_by_year, ylab = "Total PM2.5 Emission", xlab = "Year", type = "l", pch = "4")
plot(names(sum_by_year), sum_by_year, ylab = "Total PM2.5 Emission", xlab = "Year", type = "l", pch = "4")
?pch
example(pch)
plot(names(sum_by_year), sum_by_year, ylab = "Total PM2.5 Emission", xlab = "Year", type = "l")
par(mfrow(1,1))
par(mfrow = (1,1))
?par
par
par()
points(names(sum_by_year), sum_by_year, pch = 18)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(hwy, data = mpg, fill = drv)
qplot(hwy, data = mpg, fill = drv, binwidth = 10)
qplot(hwy, data = mpg, fill = drv, binwidth = 50)
qplot(hwy, data = mpg, fill = drv, binwidth = range/30)
qplot(hwy, data = mpg, fill = drv, binwidth = range(hwy)/30)
qplot(hwy, data = mpg, fill = drv, binwidth = range(data$hwy)/30)
qplot(hwy, data = mpg, fill = drv, binwidth = range(.hwy)/30)
range(hwy)
qplot(hwy, data = mpg, fill = drv)
?hist
?pgn
?png
qplot
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, facets = ~.drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
